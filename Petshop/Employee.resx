<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>